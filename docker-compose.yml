name: "exam-platform"

services:
  web:
    build: ./core
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./core:/app
    env_file:
      - ./core/.env
    depends_on:
      - db
      - redis
      - cassandra
    networks:
      - main

  # celery:
  #   build: .
  #   command: > 
  #     sh -c "cd core && celery -A core worker -l INFO"
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - ./core/.env
  #   depends_on:
  #     - web
  #     - redis
  #     - db
  #     - cassandra
  #   networks:
  #     - main

  # celery-beat:
  #   build: .
  #   command: > 
  #     sh -c "cd core && celery -A core beat -l INFO"
  #   volumes:
  #     - .:/app
  #   env_file:
  #     - ./core/.env
  #   depends_on:
  #     - web
  #     - redis
  #     - db
  #     - cassandra
  #   networks:
  #     - main
      
  db:
    image: postgres:17
    volumes:
      - custom_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=custom_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - main

  redis:
    image: redis:7.2
    volumes:
      - redis_data:/data
    networks:
      - main

  cassandra:
    image: cassandra:4.1
    # ports:
    #   - "9042:9042"  # CQL native transport port
    environment:
      - CASSANDRA_CLUSTER_NAME=ExamPlatformCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
    volumes:
      - cassandra_data:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-e", "describe keyspaces"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - main

  nginx:
    image: nginx:1.27
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
    networks:
      - main
      
volumes:
  custom_postgres_data:
  redis_data:
  cassandra_data:

networks:
  main:
    driver: bridge