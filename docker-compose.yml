
name: "exam-platform"


services:
  web:
    container_name: "Django"
    build: 
      context: .
      dockerfile: ./core/Dockerfile
    command: gunicorn -w 4 -b 0.0.0.0:8000 core.wsgi:application
    volumes:
      - ./core:/app
      - ./cassandra_orm:/app/cassandra_orm
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - cassandra-seed
    networks:
      - local

  db:
    container_name: "PostgreSQL"
    image: postgres:17
    volumes:
      - custom_postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=custom_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - local

  redis:
    container_name : "Redis"
    image: redis:7.2
    volumes:
      - redis_data:/data
    networks:
      - local

  nginx:
    container_name : "Nginx"
    image: nginx:1.27
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web
      - express-solver-1
      - express-solver-2
      - express-solver-3
    networks:
      - local
  
  express-solver-1:
    container_name: "Expressjs-1"
    command: npm run server
    build:
      context: ./exam_expressjs
      dockerfile: Dockerfile
    volumes:
      - ./exam_expressjs:/app
    environment:
      - PORT=3000
      - VERIFY_TOKENS_URL=http://web:8000/users/auth/tokens/verify/v1/
      - CASSANDRA_HOST_1=cassandra-node1
      - CASSANDRA_HOST_2=cassandra-node2
      - CASSANDRA_KEYSPACE=exam_platform
    networks:
      - local
    depends_on:
      - cassandra-node1
  
  express-solver-2:
    container_name: "Expressjs-2"
    command: npm run server
    build:
      context: ./exam_expressjs
      dockerfile: Dockerfile
    volumes:
      - ./exam_expressjs:/app
    environment:
      - PORT=3001
      - VERIFY_TOKENS_URL=http://web:8000/users/auth/tokens/verify/v1/
      - CASSANDRA_HOST_1=cassandra-node1
      - CASSANDRA_HOST_2=cassandra-node2
      - CASSANDRA_KEYSPACE=exam_platform
    networks:
      - local
    depends_on:
      - cassandra-node1

  express-solver-3:
    container_name: "Expressjs-3"
    command: npm run server
    build:
      context: ./exam_expressjs
      dockerfile: Dockerfile
    volumes:
      - ./exam_expressjs:/app
    environment:
      - PORT=3002
      - VERIFY_TOKENS_URL=http://web:8000/users/auth/tokens/verify/v1/
      - CASSANDRA_HOST_1=cassandra-node1
      - CASSANDRA_HOST_2=cassandra-node2
      - CASSANDRA_KEYSPACE=exam_platform
    networks:
      - local
    depends_on:
      - cassandra-node1

  cassandra-seed:
    image: cassandra:4.1
    container_name: cassandra-seed
    environment:
      - CASSANDRA_CLUSTER_NAME=ExamPlatformCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-seed,cassandra-node1,cassandra-node2
      - CASSANDRA_NUM_TOKENS=256
      - CASSANDRA_AUTO_BOOTSTRAP=true
    volumes:
      - cassandra_data_seed:/var/lib/cassandra
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "DESCRIBE KEYSPACES"]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 120s
    networks:
      - local

  cassandra-node1:
    image: cassandra:4.1
    container_name: cassandra-node1
    environment:
      - CASSANDRA_CLUSTER_NAME=ExamPlatformCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-seed,cassandra-node1,cassandra-node2
      - CASSANDRA_NUM_TOKENS=256
      - CASSANDRA_AUTO_BOOTSTRAP=true
    volumes:
      - cassandra_data_node1:/var/lib/cassandra
    depends_on:
      cassandra-seed:
        condition: service_healthy  # Wait for seed to be healthy
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "DESCRIBE KEYSPACES"]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 120s
    networks:
      - local

  cassandra-node2:
    image: cassandra:4.1
    container_name: cassandra-node2
    environment:
      - CASSANDRA_CLUSTER_NAME=ExamPlatformCluster
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_RACK=rack1
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_SEEDS=cassandra-seed,cassandra-node1,cassandra-node2
      - CASSANDRA_NUM_TOKENS=256
      - CASSANDRA_AUTO_BOOTSTRAP=true
    volumes:
      - cassandra_data_node2:/var/lib/cassandra
    depends_on:
      cassandra-seed:
        condition: service_healthy  # Wait for seed to be healthy
    healthcheck:
      test: ["CMD", "cqlsh", "-u", "cassandra", "-p", "cassandra", "-e", "DESCRIBE KEYSPACES"]
      interval: 30s
      timeout: 60s
      retries: 10
      start_period: 120s
    networks:
      - local
  
  celery:
    container_name: "Celery"
    build:
      context: .
      dockerfile: ./core/Dockerfile
    command: celery -A core worker --loglevel=info
    volumes:
      - ./core:/app
      - ./cassandra_orm:/app/cassandra_orm
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - local

volumes:
  custom_postgres_data:
  redis_data:
  cassandra_data_seed:
  cassandra_data_node1:
  cassandra_data_node2:

networks:
  local:
    driver: bridge